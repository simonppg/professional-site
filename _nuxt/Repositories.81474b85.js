import{a as i,b as c,e as s,t as o,o as n,F as m,r as f,c as h}from"./entry.c3bbc01e.js";const y={props:{repo:{type:Object,default:()=>({name:"Repository name",description:"Repository description",language:"Repository language",start:"Repository starts count",forks:"Repository forks count"})}}},x={class:"px-10 py-5 m-1 bg-gray-100 border-2 border-gray-800 rounded-md"},k=["href"],b={class:"block text-xs"},R={class:"pt-4 text-lg"},v={class:"hidden pb-5 text-gray-500"};function B(a,t,e,l,r,_){return n(),c("div",x,[s("a",{class:"text-xl font-medium text-gray-900 text-blue-900 font-lg hover:text-gray-500",href:e.repo.link},o(e.repo.name),9,k),s("span",b,o(e.repo.description),1),s("div",R,[s("span",null,"lang: "+o(e.repo.language),1),s("span",null,"stars: "+o(e.repo.stars),1),s("span",null,"forks: "+o(e.repo.forks),1)]),s("p",v,o(e.repo),1)])}const p=i(y,[["render",B]]),$={components:{RepositoryItem:p},data(){return{repos:[]}},async fetch(){const a=await fetch("https://api.github.com/users/simonppg/repos").then(t=>t==null?void 0:t.json());this.repos=a.map(t=>({name:t==null?void 0:t.full_name,link:t==null?void 0:t.html_url,description:t==null?void 0:t.description,language:t==null?void 0:t.language,forks:t==null?void 0:t.forks_count,stars:t==null?void 0:t.stargazers_count}))}},j={class:"p-10 grid grid-cols-3 gap-4"};function F(a,t,e,l,r,_){const d=p;return n(),c("div",j,[(n(!0),c(m,null,f(r.repos,(u,g)=>(n(),h(d,{key:g,repo:u},null,8,["repo"]))),128))])}const w=i($,[["render",F]]);export{w as default};
